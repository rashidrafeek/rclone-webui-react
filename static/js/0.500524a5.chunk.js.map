{"version":3,"sources":["../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/reactstrap/es/Button.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js"],"names":["freeGlobal","__webpack_require__","freeSelf","self","Object","root","Function","module","exports","isArray","Array","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","n","prop_types__WEBPACK_IMPORTED_MODULE_5__","prop_types__WEBPACK_IMPORTED_MODULE_5___default","classnames__WEBPACK_IMPORTED_MODULE_6__","classnames__WEBPACK_IMPORTED_MODULE_6___default","_utils__WEBPACK_IMPORTED_MODULE_7__","propTypes","active","a","bool","aria-label","string","block","color","disabled","outline","tag","innerRef","oneOfType","object","func","onClick","size","children","node","className","cssModule","close","Button","_React$Component","props","_this","call","this","bind","_proto","prototype","e","preventDefault","render","_this$props","ariaLabel","Tag","attributes","createElement","aria-hidden","btnOutlineColor","classes","href","defaultAriaLabel","type","undefined","ref","Component","defaultProps","__webpack_exports__","baseIsNative","getValue","key","value","Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","inverse","body","Card","CardBody","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","length","clear","entry","set","get","has","eq","array","nativeCreate","getNative","isKeyable","map","data","__data__","isSymbol","INFINITY","result","process","d","Doughnut","Line","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","i","arguments","source","hasOwnProperty","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_temp","_len","args","_key","apply","concat","handleOnClick","event","chartInstance","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","datasets","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","values","destroy","_props3","id","isRequired","number","arrayOf","propName","componentName","controllers","Error","display","position","_React$Component2","_this5","_ref","_React$Component3","Pie","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","Bar","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","webpackPolyfill","deprecate","paths","defineProperty","l","baseIsEqualDeep","isObjectLike","baseIsEqual","other","bitmask","customizer","stack","Map","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","arrayLikeKeys","baseKeys","isArrayLike","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","test","baseGetTag","symbolTag","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","slice","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","noop","uid","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","asyncTag","funcTag","genTag","proxyTag","funcToString","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","isFunction","isLength","srcValue","castPath","toKey","path","isKey","stringToPath","CardHeader","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","typedArrayTags","freeProcess","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","eachFunc","baseMatches","baseMatchesProperty","identity","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","isStrictComparable","hasIn","baseGet","memoizeCapped","rePropName","reEscapeChar","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","baseToString","arrayMap","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep"],"mappings":"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","file":"static/js/0.500524a5.chunk.js","sourcesContent":["var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;"],"sourceRoot":""}