{"version":3,"sources":["utils/API/API.js","utils/Tools.js","ErrorHandling/ErrorBoundary.js","actions/types.js","polyfill.js","App.js","serviceWorker.js","reducers/statusReducer.js","reducers/configReducer.js","reducers/explorerReducer.js","utils/classes/Stack.js","utils/classes/BackStack.js","reducers/explorerStateReducer.js","reducers/providerStatusReducer.js","reducers/userActionsReducer.js","reducers/imagesReducer.js","reducers/index.js","utils/StateLoader.js","throttled.js","store.js","index.js","utils/Constants.js","utils/API/endpoint.js"],"names":["axiosInstance","axios","create","headers","Content-Type","responseType","performMoveFile","srcFs","srcRemote","dstFs","dstRemote","Name","IsDir","performCopyOrMoveFile","performCopyFile","_callee","mode","url","data","splitRes","_home_runner_work_rclone_webui_react_rclone_webui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","urls","moveDir","moveFile","copyDir","copyFile","isLocalRemoteName","_async","split","Object","_home_runner_work_rclone_webui_react_rclone_webui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","length","console","log","post","abrupt","sent","stop","interceptors","request","use","config","baseURL","localStorage","getItem","IP_ADDRESS_KEY","Authorization","AUTH_KEY","error","Promise","reject","isEmpty","obj","Array","isArray","key","hasOwnProperty","bytesToKB","bytes","bytesToGB","formatBytes","decimals","arguments","undefined","dm","i","Math","floor","parseFloat","pow","toFixed","secondsToStr","seconds","numberEnding","number","years","days","hours","minutes","baseValidator","regex","str","test","validateSizeSuffix","validateInt","validateDuration","findFromConfig","name","find","ele","idx","array","Prefix","addColonAtLast","indexOf","__webpack_require__","d","__webpack_exports__","changeListVisibility","changeSearchFilter","visibilityAssociation","Images","Pdf","list","filter","acceptType","item","MimeType","searchQuery","toLowerCase","startsWith","remoteName","ErrorBoundary","props","_this","_home_runner_work_rclone_webui_react_rclone_webui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_runner_work_rclone_webui_react_rclone_webui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_runner_work_rclone_webui_react_rclone_webui_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","hasError","info","setState","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","className","reactstrap__WEBPACK_IMPORTED_MODULE_6__","fluid","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","lg","sm","href","children","React","Component","FETCH_STATUS","GET_PROVIDERS","GET_CONFIG_FOR_REMOTE","GET_REMOTE_LIST","GET_CONFIG_DUMP","GET_FILES_LIST","CHANGE_PATH","CREATE_PATH","CHANGE_REMOTE_NAME","CHANGE_REMOTE_PATH","NAVIGATE_UP","NAVIGATE_FWD","NAVIGATE_BACK","CHANGE_VISIBILITY_FILTER","CHANGE_GRID_MODE","SIGNOUT_REQUEST","CHANGE_SEARCH_QUERY","GET_REMOTE_ABOUT","SET_BANDWIDTH","GET_BANDWIDTH","ENABLE_STATUS_CHECK","CHANGE_AUTH_KEY","CHANGE_IP_ADDRESS","CHANGE_AXIOS_INTERCEPTOR","CHANGE_LOAD_IMAGES","LOAD_IMAGE","CHANGE_LAYOUT_COLS","CHANGE_DISTRACTION_FREE_MODE","REQUEST_ERROR","REQUEST_SUCCESS","REQUEST_LOADING","window","CustomEvent","event","params","bubbles","cancelable","detail","evt","document","createEvent","initCustomEvent","prototype","Event","DefaultLayout","lazy","all","e","then","bind","Login","Register","Page404","Page500","App","react_default","data-test","react_toastify","react_router_dom","Suspense","fallback","react_router","exact","path","render","Boolean","location","hostname","match","initialState","isConnected","jobs","speed","runningAvgSpeed","checkStatus","bandwidth","providers","configDump","configs","remotes","files","numCols","distractionFreeMode","Stack","items","count","classCallCheck","remotePath","push","pop","slice","getLength","BackStack","backStack","forwardStack","empty","peek","temp","moveBack","backStacks","currentPaths","visibilityFilters","gridMode","searchQueries","loadImages","about","auth","authKey","ipAddress","interceptor","appReducer","combineReducers","status","action","type","curSpeed","payload","cma","totalElements","objectSpread","concat","toConsumableArray","elapsedTime","speedAvg","remote","defineProperty","time","Date","filesList","explorer","id","visibilityFilter","current","splitPath","moveForward","providerStatus","user","setItem","eject","interceptorID","imageLoader","_action$payload","save","isLoading","rootReducer","clear","StateLoader","createClass","value","serializedState","initializeState","JSON","parse","err","newState","stringify","Error","throttled","middleware","thunk","_ref","getState","dispatch","meta","throttle","setTimeout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","stateLoader","store","createStore","loadState","applyMiddleware","apply","subscribe","saveState","ReactDOM","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister","visibilityFilteringOptions","STATUS_REFRESH_TIMEOUT","NEW_DRIVE_CONFIG_REFRESH_TIMEOUT","MODAL_ROOT_ELEMENT","USER_NAME_KEY","FILES_VIEW_HEIGHT","mkdir","purge","deleteFile","createPublicLink","stats","bwlimit","cleanUpRemote","noopAuth","getRcloneVersion","getRcloneMemStats","getOptions","getProviders","getConfigDump","getRunningJobs","getStatusForJob","getConfigForRemote","createConfig","updateConfig","getFsInfo","listRemotes","getFilesList","getAbout","deleteConfig"],"mappings":"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","file":"static/js/main.c6623db9.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {isLocalRemoteName} from \"../Tools\";\nimport {AUTH_KEY, IP_ADDRESS_KEY} from \"../Constants\";\nimport urls from \"./endpoint\";\n\n/**\n * Global level axios configuration. These settings are automatically used in other places by using an axiosInstance instead of axios directly\n */\nlet axiosInstance = axios.create({\n    headers: {'Content-Type': 'application/json'},\n    responseType: \"json\"\n});\n\n/**\n * Interceptor adds basic authentication to every axios request.\n */\naxiosInstance.interceptors.request.use(\n    config => {\n        config.baseURL = localStorage.getItem(IP_ADDRESS_KEY);\n\n        config.headers.Authorization = 'Basic ' + localStorage.getItem(AUTH_KEY);\n        return config;\n    },\n    error => Promise.reject(error)\n);\n\n/**\n * Helper Method for moving a file/directory.\n * @param srcFs     {string}    remoteName of the source\n * @param srcRemote {string}    remotePath of the source\n * @param dstFs     {string}    remoteName of the destination\n * @param dstRemote {string}    remotePath of the destination\n * @param Name      {string}    name of the file/directory\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\n * @returns         {Promise<*>}\n */\nexport function performMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir) {\n    return performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, 'move');\n}\n\n/**\n * Helper Method for copying a file/directory.\n * @param srcFs     {string}    remoteName of the source\n * @param srcRemote {string}    remotePath of the source\n * @param dstFs     {string}    remoteName of the destination\n * @param dstRemote {string}    remotePath of the destination\n * @param Name      {string}    name of the file/directory\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\n * @returns         {Promise<*>}\n */\nexport function performCopyFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir) {\n    return performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, 'copy');\n}\n\n/**\n * Perform the actual copying/ moving of a file/directory.\n * @access private\n * @param srcFs     {string}    remoteName of the source\n * @param srcRemote {string}    remotePath of the source\n * @param dstFs     {string}    remoteName of the destination\n * @param dstRemote {string}    remotePath of the destination\n * @param Name      {string}    name of the file/directory\n * @param IsDir     {boolean}   Determines whether the current path is a directory (true) or a file (false)\n * @param mode      {string}    Determines whether to copy or move. Allowed values: \"copy\", \"move\".\n * @returns         {Promise<AxiosResponse<T>>}\n */\nasync function performCopyOrMoveFile(srcFs, srcRemote, dstFs, dstRemote, Name, IsDir, mode) {\n    let url = \"\";\n    if (mode === \"move\") {\n        if (IsDir) {\n            url = urls.moveDir;\n        } else {\n            url = urls.moveFile;\n        }\n    } else {\n        if (IsDir) {\n            url = urls.copyDir;\n        } else {\n            url = urls.copyFile;\n        }\n    }\n\n    if (isLocalRemoteName(srcFs)) {\n        srcFs = \"\";\n    }\n\n    if (isLocalRemoteName(dstFs)) {\n        dstFs = \"\";\n    }\n\n    let data = {\n        _async: true\n    };\n\n\n    if (IsDir) {\n\n        const splitRes = srcRemote.split('/');\n\n        data = {\n            ...data,\n            srcFs: srcFs + srcRemote,\n            dstFs: dstFs + dstRemote + \"/\" + splitRes[splitRes.length - 1],\n        };\n        console.log(\"DirOp:\", data);\n        return await axiosInstance.post(url, data);\n\n    } else {\n        if (dstRemote === \"\") {\n            dstRemote = Name;\n        } else {\n            dstRemote += \"/\" + Name;\n        }\n\n        data = {\n            ...data,\n            srcFs: srcFs,\n            srcRemote: srcRemote,\n            dstFs: dstFs,\n            dstRemote: dstRemote,\n        };\n        return await axiosInstance.post(url, data);\n\n    }\n}\n\n\nexport default axiosInstance;\n","/**\n * Returns whether the passed in object (obj) is empty or it contains some entries.\n * @param obj {$ObjMap} An object to check if it is empty: it can be an array or a map.\n * @returns {boolean}\n */\nexport function isEmpty(obj) {\n    if (Array.isArray(obj)) return obj.length === 0;\n    for (let key in obj) {\n        if (obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n\n/**\n * Converts bytes into MB.\n * @param bytes {number} bytes to be converted.\n * @returns {number}\n */\nexport function bytesToMB(bytes) {\n    if (bytes === 0) return 0;\n    const mb = bytes / 1024 / 1024;\n\n    return mb;\n}\n\n/**\n * Converts bytes to KB.\n * @param bytes {number} bytes to be converted\n * @returns {number}\n */\nexport function bytesToKB(bytes) {\n    if (bytes === 0) return 0;\n    const kb = bytes / 1024;\n\n    return kb;\n}\n\n/**\n * Converts bytes to GB.\n * @param bytes {number} bytes to be converted\n * @returns {number}\n */\nexport function bytesToGB(bytes) {\n    if (bytes === 0) return 0;\n    const mb = bytes / 1024 / 1024 / 1024;\n\n    return mb;\n}\n\n/**\n * Converts bytes per second to Megabytes per second.\n * @param bps {number} bytes per second.\n * @returns {number}\n */\nexport function bpsToMbps(bps) {\n    if (bps === 0) return 0;\n    const mbps = bytesToMB(bps);\n    return mbps;\n}\n\n/**\n * Format bytes to a human readable format.\n * @param bytes {number} bytes to be formatted.\n * @param decimals {number} specifies the precision of numbers after the decimal point.\n * @returns {string}\n */\nexport function formatBytes(bytes, decimals = 2) {\n    if (bytes < 1) return '0 B';\n\n    const k = 1024;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n}\n\n/**\n * Converts time in seconds to a minute and hour string of the format \"HH:MM:SS hrs\"\n * @param seconds {number} Number of seconds since 00:00:00\n * @returns {string}\n */\nexport function secondsToMinutesHourString(seconds) {\n    if (seconds === 0) {\n        return `00:00:00 S`;\n    }\n    let minutes = seconds / 60;\n    seconds = seconds % 60;\n    let hours = minutes / 60;\n    minutes = minutes % 60;\n\n    return `${Math.round(hours)}:${Math.round(minutes)}:${Math.round(seconds)} hrs`;\n}\n\n/**\n * Converts seconds to a human readable string with support for year, day, week, minute, seconds.\n * @param seconds\n * @returns {string}\n */\nexport function secondsToStr(seconds) {\n    // TIP: to find current time in milliseconds, use:\n    // var  current_time_milliseconds = new Date().getTime();\n\n    function numberEnding(number) {\n        return (number > 1) ? 's' : '';\n    }\n\n    let years = Math.floor(seconds / 31536000);\n    if (years) {\n        return years + ' year' + numberEnding(years);\n    }\n    //TODO: Months! Maybe weeks?\n    let days = Math.floor((seconds %= 31536000) / 86400);\n    if (days) {\n        return days + ' day' + numberEnding(days);\n    }\n    let hours = Math.floor((seconds %= 86400) / 3600);\n    if (hours) {\n        return hours + ' hour' + numberEnding(hours);\n    }\n    let minutes = Math.floor((seconds %= 3600) / 60);\n    if (minutes) {\n        return minutes + ' minute' + numberEnding(minutes);\n    }\n    seconds = seconds % 60;\n    if (seconds) {\n        return seconds.toFixed(2) + ' second' + numberEnding(seconds);\n    }\n    return 'Just now'; //'just now' //or other string you like;\n}\n\n/**\n * Base validator takes in a regex exp and tests an input str against that regex.\n * @param regex\n * @param str\n * @returns {boolean | * | never}\n */\nexport function baseValidator(regex, str) {\n\n    return regex.test(str);\n}\n\n/**\n * Validate Size Suffix of the format (off | 1K | 1M | 100G | 10P ) etc\n * @param str {string} String to be validated\n * @returns {boolean|*|never}\n */\nexport function validateSizeSuffix(str) {\n    const regex = /^(off|(([0-9]+[.][0-9]+|[0-9]+)([KMGTP])))$/i;\n\n    return baseValidator(regex, str);\n}\n\n/**\n * Validate integer without decimal points (0-9)\n * @param str {number|string} The string to be validated.\n * @returns {boolean|*|never}\n */\nexport function validateInt(str) {\n    const regex = /^([0-9]+)$/;\n    return baseValidator(regex, str);\n}\n\n/**\n * Validate duration hours, minutes, seconds, milliseconds etc.\n * @param str {number|string} The duration to be validated.\n * @returns {boolean|*|never}\n */\nexport function validateDuration(str) {\n    const regex = /^(\\d+[h])?(\\d+[m])?(\\d+[s])?(\\d+ms)??$/i;\n    return baseValidator(regex, str);\n}\n\n/**\n * Opens the specified URL in a new tab and focus on it.\n * @param url {string} URL to be opened.\n */\nexport function openInNewTab(url) {\n    let win = window.open(url, '_blank');\n    win.focus();\n}\n\n/**\n * Helper function for finding the provider with a given prefix.\n * @param config {$ObjMap} Array of remote configs\n * @param name {string} Specifies the name of the provider to find.\n * @returns {*}\n */\n\nexport function findFromConfig(config, name) {\n    const currentConfig = config.find((ele, idx, array) => {\n        return (name === ele.Prefix);\n    });\n    return currentConfig;\n}\n\n\n/**\n * Helper function to add semicolon to the last.\n * Behaviour: if the passed in string does not have a semicolon at last, then insert it.\n * If there is a semicolon in the middle, skip insertion.\n * @param name\n * @returns {string}\n */\nexport function addColonAtLast(name) {\n    if (name.indexOf(':') === -1) {\n        if (name[name.length - 1] !== \":\") {\n            name = name + \":\"\n        }\n    }\n\n    return name;\n}\n\n/**\n * Allowed types for visibility Status modification in file explorer.\n * @type {{Pdf: string, Images: string}}\n */\nconst visibilityAssociation = {\n    Images: \"image/jpeg\",\n    Pdf: \"application/pdf\",\n};\n\n/**\n * Function to filter the list of files based on the provided visibility status.\n * @param list {$ObjMap}\n * @param filter {string} Specifies the type of files to display eg: Images, Pdf etc.\n * @param checkList {$ObjMap} Provides mimeType matches for every string visibility operation eg: Images: \"image/jpeg\"\n * @returns {$ObjMap}\n */\nexport function changeListVisibility(list, filter, checkList = visibilityAssociation) {\n    let acceptType = checkList[filter];\n    // console.log(list);\n    if (acceptType) {\n        let newList = list.filter((item) => {\n            return (item.IsDir || item.MimeType === acceptType);\n        });\n        return newList;\n    }\n    return list;\n\n}\n\n/**\n * Function to filter the list of files based on the provided search query.\n * Uses linear search for filtering the relevant files.\n * @param list\n * @param searchQuery\n * @returns {*}\n */\nexport function changeSearchFilter(list, searchQuery = \"\") {\n    searchQuery = searchQuery.toLowerCase();\n    if (searchQuery) {\n        let newList = list.filter((item) => {\n            return item.Name.toLowerCase().startsWith(searchQuery);\n        });\n        return newList;\n    }\n    return list;\n\n}\n\n/**\n * Checks whether the remoteName is local or not. Returns true if it is a remote local path, false otherwise.\n * Behaviour: if the name starts with \"/\" it is a local name.\n * @param remoteName {string} Name of the remote to check for.\n * @returns {boolean}\n */\nexport function isLocalRemoteName(remoteName) {\n    return (remoteName && remoteName !== \"\" && remoteName[0] === \"/\");\n}\n","import React from \"react\";\nimport {Col, Container, Row} from \"reactstrap\";\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {hasError: false};\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return {hasError: true};\n    }\n\n    componentDidCatch(error, info) {\n        // You can also log the error to an error reporting service\n        // logErrorToMyService(error, info);\n        // Send error to Rclone backend.\n        this.setState({error, info});\n\n\n        console.log(\"Hey\");\n    }\n\n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return (\n                <div className=\"d-flex align-items-center\">\n                    <Container fluid={true}>\n                        <Row>\n                            <Col lg={3} sm={12}/>\n                            <Col lg={6} sm={12}>\n                                <h3>Something went wrong. </h3>\n                                <Row>\n                                    <Col>\n                                        Try refreshing the page.\n                                        If the issue persists, please consider opening a new issue on our Github page.\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col>\n                                        <a href=\"https://github.com/negative0/rclone-webui-react/issues\"\n                                           className=\"btn btn-primary\">\n                                            Create new Issue.\n                                        </a>\n                                    </Col>\n                                </Row>\n\n                            </Col>\n                            <Col lg={3} sm={12}/>\n                        </Row>\n                    </Container>\n                </div>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","export const FETCH_STATUS = 'FETCH_STATUS';\nexport const GET_PROVIDERS = 'GET_PROVIDERS';\nexport const GET_CONFIG_FOR_REMOTE = 'GET_CONFIG_FOR_REMOTE';\nexport const GET_REMOTE_LIST = 'GET_REMOTE_LIST';\nexport const GET_CONFIG_DUMP = 'GET_CONFIG_DUMP';\nexport const GET_FILES_LIST = 'GET_FILES_LIST';\nexport const CHANGE_PATH = 'CHANGE_PATH';\nexport const CREATE_PATH = 'CREATE_PATH';\nexport const CHANGE_REMOTE_NAME = 'CHANGE_REMOTE_NAME';\nexport const CHANGE_REMOTE_PATH = 'CHANGE_REMOTE_PATH';\nexport const NAVIGATE_UP = 'NAVIGATE_UP';\nexport const NAVIGATE_FWD = 'NAVIGATE_FWD';\nexport const NAVIGATE_BACK = 'NAVIGATE_BACK';\nexport const CHANGE_VISIBILITY_FILTER = 'CHANGE_VISIBILITY_FILTER';\nexport const CHANGE_GRID_MODE = 'CHANGE_GRID_MODE';\nexport const SIGNOUT_REQUEST = 'SIGNOUT_REQUEST';\nexport const CHANGE_SEARCH_QUERY = 'CHANGE_SEARCH_QUERY';\nexport const GET_REMOTE_ABOUT = 'GET_REMOTE_ABOUT';\nexport const CREATE_PUBLIC_LINK = 'CREATE_PUBLIC_LINK';\nexport const GET_RUNNING_JOBS = 'GET_RUNNING_JOBS';\nexport const GET_STATUS_FOR_RUNNING_JOB = 'GET_STATUS_FOR_RUNNING_JOB';\nexport const SET_BANDWIDTH = 'SET_BANDWIDTH';\nexport const GET_BANDWIDTH = 'GET_BANDWIDTH';\nexport const ENABLE_STATUS_CHECK = 'ENABLE_STATUS_CHECK';\n// export const CHANGE_USER_NAME_PASSWORD = 'CHANGE_USER_NAME_PASSWORD';\nexport const CHANGE_AUTH_KEY = 'CHANGE_AUTH_KEY';\nexport const CHANGE_IP_ADDRESS = 'CHANGE_IP_ADDRESS';\nexport const CHANGE_AXIOS_INTERCEPTOR = 'CHANGE_AXIOS_INTERCEPTOR';\nexport const CHANGE_LOAD_IMAGES = 'CHANGE_LOAD_IMAGES';\nexport const LOAD_IMAGE = 'LOAD_IMAGE';\nexport const CHANGE_LAYOUT_COLS = 'CHANGE_LAYOUT_COLS';\nexport const CHANGE_DISTRACTION_FREE_MODE = \"CHANGE_DISTRACTION_FREE_MODE\";\n\n\nexport const REQUEST_ERROR = 'ERROR';\nexport const REQUEST_SUCCESS = 'SUCCESS';\nexport const REQUEST_LOADING = 'LOADING';\n","/*\n* required polyfills\n*/\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol'\n// import 'core-js/es6/object'\n// import 'core-js/es6/function'\n// import 'core-js/es6/parse-int'\n// import 'core-js/es6/parse-float'\n// import 'core-js/es6/number'\n// import 'core-js/es6/math'\n// import 'core-js/es6/string'\n// import 'core-js/es6/date'\nimport 'core-js/es/array'\n// import 'core-js/es6/regexp'\nimport 'core-js/es/map'\n// import 'core-js/es6/weak-map'\nimport 'core-js/es/set'\nimport 'core-js/es/object'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n\n    if (typeof window.CustomEvent === \"function\") return false;\n\n    function CustomEvent(event, params) {\n        params = params || {bubbles: false, cancelable: false, detail: undefined};\n        var evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n    }\n\n    CustomEvent.prototype = window.Event.prototype;\n\n    window.CustomEvent = CustomEvent;\n})();\n","import React, {Component} from 'react';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\n// import { renderRoutes } from 'react-router-config';\nimport './App.scss';\nimport {ToastContainer} from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport ErrorBoundary from \"./ErrorHandling/ErrorBoundary\";\n\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\n\n// Containers\nconst DefaultLayout = React.lazy(() => import('./containers/DefaultLayout'));\n\n// Pages\nconst Login = React.lazy(() => import('./views/Pages/Login'));\nconst Register = React.lazy(() => import('./views/Pages/Register'));\nconst Page404 = React.lazy(() => import('./views/Pages/Page404'));\nconst Page500 = React.lazy(() => import('./views/Pages/Page500'));\n\nclass App extends Component {\n\n    render() {\n        return (\n            <div data-test=\"appComponent\">\n                <ErrorBoundary>\n                    <ToastContainer/>\n                    <HashRouter>\n                        <React.Suspense fallback={loading()}>\n                            <Switch>\n                                <Route exact path=\"/login\" name=\"Login Page\" render={props => <Login {...props}/>}/>\n                                <Route exact path=\"/register\" name=\"Register Page\"\n                                       render={props => <Register {...props}/>}/>\n                                <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>}/>\n                                <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props}/>}/>\n                                <Route path=\"/\" name=\"Home\" render={props => <DefaultLayout {...props}/>}/>\n                            </Switch>\n                        </React.Suspense>\n                    </HashRouter>\n                </ErrorBoundary>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://goo.gl/SC7cgQ'\n                    );\n                });\n            } else {\n                // Is not local host. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the old content will have been purged and\n                            // the fresh content will have been added to the cache.\n                            // It's the perfect time to display a \"New content is\n                            // available; please refresh.\" message in your web app.\n                            console.log('New content is available; please refresh.');\n\n                            // Execute callback\n                            if (config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            if (\n                response.status === 404 ||\n                response.headers.get('content-type').indexOf('javascript') === -1\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import {\n    ENABLE_STATUS_CHECK,\n    FETCH_STATUS,\n    GET_BANDWIDTH,\n    REQUEST_ERROR,\n    REQUEST_SUCCESS,\n    SET_BANDWIDTH\n} from \"../actions/types\";\n\nconst initialState = {\n    isConnected: false,\n    jobs: {},\n    speed: [],\n    runningAvgSpeed: 0,\n    checkStatus: true,\n    bandwidth: {}\n};\n/**\n * Specifies reducers for status check of the rclone backend.\n * @param state\n * @param action\n * @returns {({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{isConnected: boolean, error: *})|{checkStatus: boolean, bandwidth: {}, jobs: {}, isConnected: boolean, runningAvgSpeed: number, speed: Array}|({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{bandwidth: *})|({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{jobs: *, isConnected: boolean, runningAvgSpeed: number, speed: *[]})|({checkStatus, bandwidth, jobs, isConnected, runningAvgSpeed, speed}&{checkStatus: *})}\n */\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case FETCH_STATUS:\n\n            if (action.status === REQUEST_SUCCESS) {\n                const curSpeed = action.payload.speed;\n                let cma = state.runningAvgSpeed;\n                let totalElements = state.speed.length;\n                if (!totalElements) totalElements = 1;\n                let runningAvgSpeed = cma + ((curSpeed - cma) / 50);\n\n\n                return {\n                    ...state,\n                    jobs: action.payload,\n                    runningAvgSpeed,\n                    speed: [...state.speed, {\n                        elapsedTime: action.payload.elapsedTime,\n                        speed: action.payload.speed,\n                        speedAvg: runningAvgSpeed\n                    }],\n                    isConnected: true\n                };\n            }\n            if (action.status === REQUEST_ERROR) {\n                return {\n                    ...state,\n                    error: action.payload,\n                    isConnected: false\n                };\n            }\n            break;\n        case ENABLE_STATUS_CHECK:\n            return {\n                ...state,\n                checkStatus: action.payload\n            };\n        case SET_BANDWIDTH:\n        case GET_BANDWIDTH:\n            return {\n                ...state,\n                bandwidth: action.payload\n            };\n        default:\n            return state;\n    }\n}","import {GET_CONFIG_DUMP, GET_PROVIDERS, REQUEST_ERROR, REQUEST_SUCCESS} from \"../actions/types\";\n\nconst initialState = {\n    providers: [],\n    configDump: {},\n    hasError: false,\n};\n/**\n * Specifies redux reduce operations for the config module.\n * @param state {$ObjMap}\n * @param action {$ObjMap}\n * @returns {({hasError, providers, configDump}&{providers: *})|({hasError, providers, configDump}&{hasError: boolean, error: *})|({hasError, providers, configDump}&{hasError: boolean, configDump: *})|{hasError: boolean, providers: Array, configDump: {}}}\n */\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_PROVIDERS:\n            return {\n                ...state,\n                providers: action.payload,\n            };\n\n        case GET_CONFIG_DUMP:\n            if (action.status === REQUEST_SUCCESS)\n                return {\n                    ...state,\n                    configDump: action.payload,\n                    hasError: false\n                };\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n                    hasError: true,\n                    error: action.payload\n                };\n            break;\n        default:\n            return state;\n    }\n}","import {\n    CHANGE_DISTRACTION_FREE_MODE,\n    CHANGE_LAYOUT_COLS,\n    GET_CONFIG_FOR_REMOTE,\n    GET_FILES_LIST,\n    GET_REMOTE_LIST,\n    REQUEST_ERROR,\n    REQUEST_SUCCESS\n} from \"../actions/types\";\n\nconst initialState = {\n    configs: {},\n    remotes: [],\n    files: {},\n    hasError: false,\n    numCols: 0,\n    distractionFreeMode: false\n};\n/**\n * Specifies the explorer specific reducers for the redux actions.\n * @param state\n * @param action\n * @returns {{configs: {}, remotes: Array, files: {}, hasError: boolean}|({configs, remotes, files, hasError}&{files: (initialState.files|{})})|({configs, remotes, files, hasError}&{files: (initialState.files|{}), hasError: boolean})|({configs, remotes, files, hasError}&{hasError: boolean, error: *})|({configs, remotes, files, hasError}&{configs: ((initialState.configs&*)|({}&*)), hasError: boolean})|({configs, remotes, files, hasError}&{remotes: *, hasError: boolean})}\n */\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_CONFIG_FOR_REMOTE:\n            if (action.status === REQUEST_SUCCESS)\n                return {\n                    ...state,\n                    configs: {...state.configs, ...action.payload},\n                    hasError: false\n                };\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n                    error: action.payload,\n                    hasError: true\n                };\n            break;\n        case GET_REMOTE_LIST:\n            if (action.status === REQUEST_SUCCESS)\n                return {\n                    ...state,\n                    remotes: action.payload,\n                    hasError: false\n                };\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n                    error: action.payload,\n                    hasError: true\n                };\n            break;\n        case GET_FILES_LIST:\n            if (action.status === REQUEST_SUCCESS) {\n                return {\n                    ...state,\n                    files: {...state.files, [action.payload.path]: {time: new Date(), files: action.payload.filesList}},\n                    hasError: false\n                }\n            }\n            if (action.status === REQUEST_ERROR)\n                return {\n                    ...state,\n                    files: {...state.files,\n                        [action.payload.path]: {\n                            time: new Date(),\n                            files: [],\n                            hasError: true,\n                            error: action.payload.error\n                        }\n                    }\n                };\n            break;\n        case CHANGE_LAYOUT_COLS:\n            return {\n                ...state,\n                numCols: action.payload.numCols\n            };\n        case CHANGE_DISTRACTION_FREE_MODE:\n            return {\n                ...state,\n                distractionFreeMode: action.payload\n            };\n        default:\n            return state;\n    }\n\n}","// A very simple stack implementation to handle back links in remote explorer\nclass Stack  {\n    constructor(items = undefined, count = undefined) {\n        if (items && count) {\n            this.items = items;\n            this.count = count;\n            return;\n        }\n        this.items = [{remoteName: \"\", remotePath: \"\"}];\n        this.count = 1;\n    }\n\n    getLength() {\n        return this.count;\n    }\n\n    push(item) {\n        this.items.push(item);\n        this.count = this.count + 1;\n    }\n\n    pop() {\n        if (this.count > 0) {\n            this.count = this.count - 1;\n        }\n\n        return this.items.pop();\n    }\n\n    peek() {\n        return this.items.slice(-1)[0];\n    }\n\n    empty() {\n        this.items = [];\n        this.count = 0;\n    }\n\n    moveBack() {\n\n        if (this.getLength() > 1)\n            return this.pop();\n    }\n}\n\nexport default Stack;","import Stack from './Stack'\n\n// A very simple stack implementation to handle back links in remote explorer\nclass BackStack {\n    constructor(backStack = undefined) {\n        if (backStack) {\n            this.backStack = new Stack(backStack.backStack.items, backStack.backStack.count);\n            this.forwardStack = new Stack(backStack.forwardStack.items, backStack.forwardStack.count);\n            return;\n        }\n        this.backStack = new Stack();\n        this.forwardStack = new Stack();\n    }\n\n\n    getLength() {\n        return this.backStack.getLength();\n    }\n\n    push(item) {\n\n        this.backStack.push(item);\n        this.forwardStack.empty();\n\n    }\n\n    pop() {\n        const temp = this.backStack.pop();\n        return temp;\n    }\n\n    peek() {\n        return this.backStack.peek();\n    }\n\n    empty() {\n        this.backStack.empty();\n        this.forwardStack.empty();\n    }\n\n    moveBack() {\n        const temp = this.backStack.moveBack();\n        if(temp)\n            this.forwardStack.push(temp);\n        return temp;\n    }\n\n    moveForward(){\n        const temp = this.forwardStack.pop();\n        if(temp){\n            //Pop was successful\n            this.backStack.push(temp);\n        }\n        return temp;\n\n    }\n\n\n\n}\n\nexport default BackStack;","import {\n    CHANGE_GRID_MODE,\n    CHANGE_LOAD_IMAGES,\n    CHANGE_PATH,\n    CHANGE_REMOTE_NAME,\n    CHANGE_REMOTE_PATH,\n    CHANGE_SEARCH_QUERY,\n    CHANGE_VISIBILITY_FILTER,\n    CREATE_PATH,\n    NAVIGATE_BACK,\n    NAVIGATE_FWD,\n    NAVIGATE_UP\n} from \"../actions/types\";\nimport BackStack from \"../utils/classes/BackStack\";\n\nconst initialState = {\n    backStacks: {},\n    currentPaths: {},\n    visibilityFilters: {},\n    gridMode: {},\n    searchQueries: {},\n    loadImages: {}\n};\n\n/**\n * Specifies the reducers for explorer state manipulation.\n * @param state {$ObjMap}\n * @param action {$ObjMap}\n * @returns {{currentPaths: {}, visibilityFilters: {}, gridMode: {}, searchQueries: {}, backStacks: {}}|({currentPaths, visibilityFilters, gridMode, searchQueries, backStacks}&{currentPaths: (initialState.currentPaths|{}), visibilityFilters: (initialState.visibilityFilters|{}), gridMode: (initialState.gridMode|{}), searchQueries: (initialState.searchQueries|{}), backStacks: (initialState.backStacks|{})})}\n */\nexport default function (state = initialState, action) {\n\n    const id = action.id;\n    if (id) {\n\n        let backStack = state.backStacks[id];\n        if (!backStack || !(backStack instanceof BackStack)) {\n\n\n            if (!(backStack instanceof BackStack)) {\n                // Redux dosen't store the internal functions of class objects when serialized. So as a work around,\n                // if the backstack is not an instance of backStack, i.e. its methods are missing,\n                // create a new backstack with current data\n                backStack = new BackStack(backStack)\n            } else {\n                backStack = new BackStack();\n            }\n        }\n\n\n        // let arrayLen = array.length - 1 ;\n\n        let remoteName = action.remoteName;\n        let remotePath = action.remotePath;\n\n        if (!remoteName) remoteName = \"\";\n        if (!remotePath) remotePath = \"\";\n        const data = {\n            remoteName: remoteName,\n            remotePath: remotePath\n        };\n\n        let visibilityFilter = state.visibilityFilters[id];\n        let gridMode = state.gridMode[id];\n\n        let searchQuery = \"\";\n        let loadImages = state.loadImages[id];\n        if (!loadImages) loadImages = false;\n\n\n        switch (action.type) {\n            case CHANGE_PATH:\n                backStack.push(data);\n                break;\n\n            case CHANGE_REMOTE_NAME:\n                if (remoteName.indexOf('/') === 0) {/*The name starts with a /: local Name*/\n                    remotePath = remoteName;\n                    remoteName = \"/\";\n\n                } else {\n                    remotePath = \"\";\n                }\n                backStack.empty();\n                backStack.push({remoteName: remoteName, remotePath: remotePath});\n                // ptr++;\n\n                break;\n\n            case CHANGE_REMOTE_PATH:\n                backStack.push({remoteName: backStack.peek().remoteName, remotePath: remotePath});\n                // ptr++;\n\n                break;\n\n            case CREATE_PATH:\n                if (!backStack || !(backStack instanceof BackStack))\n                    backStack = new BackStack();\n                break;\n\n            case NAVIGATE_UP:\n                // TODO: Write logic for up, which will navigate one directory up\n                let current = backStack.peek();\n\n                if (current.remotePath && current.remotePath !== \"\") {\n                    const splitPath = current.remotePath.split('/');\n                    current.remotePath = \"\";\n                    if (splitPath.length > 1)\n                        for (let i = 0; i < splitPath.length - 1; i++) {\n                            current.remotePath = current.remotePath + ((i !== 0) ? '/' : '') + splitPath[i];\n                        }\n                }\n                backStack.push(current);\n                break;\n\n            case NAVIGATE_FWD:\n                backStack.moveForward();\n                break;\n\n            case NAVIGATE_BACK:\n                backStack.moveBack();\n                break;\n            case CHANGE_VISIBILITY_FILTER:\n                if (action.filter)\n                    visibilityFilter = action.filter;\n                break;\n            case CHANGE_GRID_MODE:\n                if (action.mode) {\n                    gridMode = action.mode;\n                }\n                break;\n\n            case CHANGE_SEARCH_QUERY:\n                searchQuery = action.searchQuery;\n                break;\n\n            case CHANGE_LOAD_IMAGES:\n                loadImages = action.payload;\n                break;\n            default:\n                break;\n        }\n        return {\n            ...state,\n            backStacks: {...state.backStacks, [id]: backStack},\n            currentPaths: {...state.currentPaths, [id]: {...backStack.peek()}},\n            visibilityFilters: {...state.visibilityFilters, [id]: visibilityFilter},\n            gridMode: {...state.gridMode, [id]: gridMode},\n            searchQueries: {...state.searchQueries, [id]: searchQuery},\n            loadImages: {...state.loadImages, [id]: loadImages}\n        };\n    } else {\n        // console.error(\"ID is unexpectedly null\");\n        return state;\n    }\n\n\n};\n","import {GET_REMOTE_ABOUT, REQUEST_ERROR, REQUEST_SUCCESS} from \"../actions/types\";\n\nconst initialState = {\n    about: {}\n};\n/**\n * Specifies reducers for getting information about the current providers.\n * @param state\n * @param action\n * @returns {{about: {}}|({about}&{about: (initialState.about|{})})}\n */\nexport default function (state = initialState, action) {\n\n    switch (action.type) {\n        case GET_REMOTE_ABOUT:\n            if (action.status === REQUEST_SUCCESS) {\n                return {...state, about: {...state.about, [action.id]: action.payload}};\n            } else if (action.status === REQUEST_ERROR) {\n                // console.log(\"Error occurred\");\n                return state;\n            }\n            break;\n\n        default:\n            return state;\n\n    }\n}","import {CHANGE_AUTH_KEY, CHANGE_AXIOS_INTERCEPTOR, CHANGE_IP_ADDRESS} from \"../actions/types\";\nimport axiosInstance from \"../utils/API/API\";\nimport {AUTH_KEY, IP_ADDRESS_KEY} from \"../utils/Constants\";\n\nconst initialState = {\n    auth: {authKey: \"\", ipAddress: \"http://localhost:5572\", interceptor: \"\"}\n};\n\n/**\n * Specifies reducers for user actions like change username, password, ipAddress etc.\n * @param state\n * @param action\n * @returns {{auth: {authKey: string, ipAddress: string}}|({auth}&{auth: ((initialState.auth&*)|({password, ipAddress, userName}&*))})}\n */\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case CHANGE_AUTH_KEY:\n        case CHANGE_IP_ADDRESS:\n            state = {\n                ...state,\n                auth: {...state.auth, ...action.payload}\n            };\n            localStorage.setItem(AUTH_KEY, state.auth.authKey);\n            // localStorage.setItem(USER_NAME_KEY, state.auth.userName);\n            // localStorage.setItem(PASSWORD_KEY, state.auth.password);\n            localStorage.setItem(IP_ADDRESS_KEY, state.auth.ipAddress);\n            return state;\n        case CHANGE_AXIOS_INTERCEPTOR:\n            if (state.auth.interceptor)\n                axiosInstance.interceptors.request.eject(state.auth.interceptor);\n\n            const interceptorID = axiosInstance.interceptors.request.use(\n                config => {\n                    // Setup the configuration of authentication headers\n                    config.headers.Authorization = 'Basic ' + localStorage.getItem(AUTH_KEY);\n                    config.baseURL = localStorage.getItem(\"ipAddress\");\n                    return config;\n                },\n                error => Promise.reject(error)\n            );\n            return {\n                ...state,\n                auth: {...state.auth, interceptor: interceptorID}\n            };\n        default:\n            return state;\n    }\n}","import {LOAD_IMAGE, REQUEST_ERROR, REQUEST_LOADING, REQUEST_SUCCESS} from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case LOAD_IMAGE:\n            const {url, data, error} = action.payload;\n            let save = state[url];\n            if (!save)\n                save = {\n                    isLoading: false,\n                    data: \"\",\n                    error: \"\",\n                    hasError: false\n                };\n\n            switch (action.status) {\n                case REQUEST_LOADING:\n                    save.isLoading = true;\n                    save.hasError = false;\n                    break;\n                case REQUEST_SUCCESS:\n                    save.isLoading = false;\n                    save.hasError = false;\n                    save.data = data;\n                    break;\n                case REQUEST_ERROR:\n                    save.hasError = true;\n                    save.isLoading = false;\n                    save.error = error;\n                    break;\n                default:\n                    break;\n            }\n            return {\n                ...state,\n                [url]: {...save}\n            };\n\n        default:\n            return state;\n    }\n}","import {combineReducers} from 'redux';\n\nimport statusReducer from './statusReducer';\nimport configReducer from \"./configReducer\";\nimport explorerReducer from \"./explorerReducer\";\nimport explorerState from \"./explorerStateReducer\";\nimport {SIGNOUT_REQUEST} from \"../actions/types\";\nimport providerStatusReducer from \"./providerStatusReducer\";\nimport userActionsReducer from \"./userActionsReducer\";\nimport imagesReducer from \"./imagesReducer\";\n\n/**\n * Configures the root reducer to be executed before any other reducers configured in the system.\n * This involves actions for clearing the localStorage and state when user signs out.\n * @param state\n * @param action\n * @returns {any}\n */\nconst rootReducer = (state, action) => {\n    if (action.type === SIGNOUT_REQUEST) {\n        localStorage.clear();\n        state = undefined;\n    }\n\n    return appReducer(state, action);\n};\n\n/**\n * List of reducers to be configured. The reducers are called one by one from top to bottom.\n * @type {Reducer<any>}\n */\nconst appReducer = combineReducers({\n    status: statusReducer,\n    config: configReducer,\n    remote: explorerReducer,\n    explorer: explorerState,\n    providerStatus: providerStatusReducer,\n    user: userActionsReducer,\n    imageLoader: imagesReducer\n    // remoteOps: remoteOpsReducer\n});\n\nexport default rootReducer;","// Used to persist redux-state to the localStorage.\nexport class StateLoader {\n\n    /**\n     * It loads the redux state from the local store.\n     * @returns {{}|any}\n     */\n    loadState() {\n        try {\n            let serializedState = localStorage.getItem(\"curState\");\n\n            if (serializedState === null) {\n                return this.initializeState();\n            }\n\n            return JSON.parse(serializedState);\n        } catch (err) {\n            return this.initializeState();\n        }\n    }\n\n    /**\n     * Saves the current state to the localStore with variable name curState.\n     * BEWARE: Uses expensive operation JSON.stringify(). May cause performance issues. Any alternative is welcome.\n     * @param state {$ObjMap} The current state to be saved.\n     */\n    saveState(state) {\n        const newState = {\n            ...state,\n            imageLoader: undefined\n        };\n        try {\n            let serializedState = JSON.stringify(newState);\n            // console.log(serializedState);\n            localStorage.setItem(\"curState\", serializedState);\n\n        } catch (err) {\n            console.error(\"Error occurred while saving state\");\n            throw new Error(`Cannot Save State ${err}`);\n        }\n    }\n\n    /**\n     * Initializes the redux state with an empty map {}.\n     * @returns {{}}\n     */\n    initializeState() {\n        return {\n            //state object\n        }\n    };\n}\n","const throttled = {};\n\nexport default ({getState, dispatch}) => next => action => {\n    const time = action.meta && action.meta.throttle;\n\n    if (!time)\n        return next(action);\n\n    if (throttled[action.type]) {\n        return;\n    }\n\n    throttled[action.type] = true;\n\n    setTimeout(() => {\n        throttled[action.type] = false;\n    }, time);\n\n    next(action);\n}","import {applyMiddleware, compose, createStore} from \"redux\";\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport {StateLoader} from \"./utils/StateLoader\";\nimport throttledMiddleware from './throttled';\n\n\nexport const middleware = [thunk, throttledMiddleware];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst stateLoader = new StateLoader();\n\nconst store = createStore(rootReducer,\n    stateLoader.loadState(),\n    composeEnhancers(\n        applyMiddleware(...middleware)\n    ));\n\n//Function to persist store data to localStorage\nstore.subscribe(() => {\n    stateLoader.saveState(store.getState());\n});\n\nexport default store;","import 'react-app-polyfill/ie9'; // For IE 9-11 support\nimport 'react-app-polyfill/ie11'; // For IE 11 support\nimport './polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/**\n * Returns a string array with possible filtering options.\n * @type {string[]}\n */\nexport const visibilityFilteringOptions = [\"Images\", \"Pdf\", \"Videos\"];\n\n/**\n * Refresh timeout for checking backend status.\n * In milliseconds.\n * @type {number}\n */\nexport const STATUS_REFRESH_TIMEOUT = 1000 * 5;\n/**\n * Refresh timeout for checking if the config is created.\n * In milliseconds.\n * @type {number}\n */\nexport const NEW_DRIVE_CONFIG_REFRESH_TIMEOUT = 1000;\nexport const MODAL_ROOT_ELEMENT = \"modal-root\";\n\nexport const USER_NAME_KEY = \"userName\";\nexport const AUTH_KEY = \"authKey\";\nexport const PASSWORD_KEY = \"password\";\nexport const IP_ADDRESS_KEY = \"ipAddress\";\n\nexport const FILES_VIEW_HEIGHT = \"75vh\";","const urls = {\n    /**\n     * Make Directory.\n     */\n    mkdir: \"operations/mkdir\",\n    /**\n     * Purge a directory.\n     */\n    purge: \"operations/purge\",\n    /**\n     * Delete a file.\n     */\n    deleteFile: \"operations/deletefile\",\n    /**\n     * Create public link.\n     */\n    createPublicLink: \"operations/publiclink\",\n    /**\n     * Stats for rclone backend.\n     */\n    stats: \"core/stats\",\n    /**\n     * Check and set bwlimit.\n     */\n    bwlimit: \"core/bwlimit\",\n    /**\n     * Move a directory.\n     */\n    moveDir: \"sync/move\",\n    /**\n     * Move a file.\n     */\n    moveFile: \"operations/movefile\",\n    /**\n     * Copy Directory\n     */\n    copyDir: \"sync/copy\",\n    /**\n     * Copy Files.\n     */\n    copyFile: \"operations/copyfile\",\n    /**\n     * Cleanup the remote recycle bin(trash).\n     */\n    cleanUpRemote: \"operations/cleanup\",\n\n    /**\n     * Try to connect without any authentication headers.\n     */\n    noopAuth: \"rc/noopauth\",\n    /**\n     * Check the version of the rclone.\n     */\n    getRcloneVersion: \"core/version\",\n\n    /**\n     * Memstats for the rclone backend.\n     */\n    getRcloneMemStats: \"core/memstats\",\n    /**\n     * Get options available in the backend.\n     */\n    getOptions: \"options/get\",\n    /**\n     * Get providers configuration in the rclone backend.\n     */\n    getProviders: \"config/providers\",\n    /**\n     * Get entire remote configuration dump from backend.\n     */\n    getConfigDump: \"config/dump\",\n    /**\n     * List the currently running jobs.\n     */\n    getRunningJobs: \"job/list\",\n    /**\n     * Get the status for a job.\n     */\n    getStatusForJob: \"job/status\",\n    /**\n     *  Get config for a specific remote.\n     */\n    getConfigForRemote: \"config/get\",\n    /**\n     * Create a new config with parameters.\n     */\n    createConfig: \"config/create\",\n    /**\n     * Update an existing config with parameters.\n     */\n    updateConfig: \"config/update\",\n    /**\n     * Get File system information and supported features for a given remote time.\n     */\n    getFsInfo: \"operations/fsinfo\",\n\n    /**\n     * List the remote names of created remotes.\n     */\n    listRemotes: \"config/listremotes\",\n    /**\n     * Get the files for given remoteName and path.\n     */\n    getFilesList: \"operations/list\",\n\n    /**\n     * Get information about the rclone backend.\n     */\n    getAbout: \"operations/about\",\n    /**\n     * Delete a config with config name.\n     */\n    deleteConfig: \"config/delete\"\n\n};\nexport default urls;"],"sourceRoot":""}